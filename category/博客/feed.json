{
    "version": "https://jsonfeed.org/version/1",
    "title": "陆时忤的博客 • All posts by \"博客\" category",
    "description": "要再见 不要再见",
    "home_page_url": "http://blog.aixcc.top",
    "items": [
        {
            "id": "http://blog.aixcc.top/2024/06/16/Hexo%E5%A4%87%E4%BB%BD/",
            "url": "http://blog.aixcc.top/2024/06/16/Hexo%E5%A4%87%E4%BB%BD/",
            "title": "Hexo备份",
            "date_published": "2024-06-16T11:19:00.000Z",
            "content_html": "<h1 id=\"使用-Hexo-和-GitHub-实现多平台工作和数据备份\"><a class=\"headerlink\" href=\"#使用-Hexo-和-GitHub-实现多平台工作和数据备份\"></a>使用 Hexo 和 GitHub 实现多平台工作和数据备份</h1>\n<h2 id=\"目标\"><a class=\"headerlink\" href=\"#目标\"></a>目标</h2>\n<ul>\n<li><strong><code>master</code> 分支</strong>：保存 Hexo 生成的静态文件，用于部署到 GitHub Pages。</li>\n<li><strong><code>hexo</code> 分支</strong>：保存 Hexo 源文件，便于本地编辑和备份，并设置为默认分支。</li>\n</ul>\n<h2 id=\"为什么要这样做？\"><a class=\"headerlink\" href=\"#为什么要这样做？\"></a>为什么要这样做？</h2>\n<p>使用两个分支的目的是将生成的静态文件和源文件分开管理，以便在多个设备上编辑博客，同时保持数据的安全备份。<code>hexo</code> 分支保存源文件，方便我们在不同平台进行编辑；<code>master</code> 分支保存静态文件，用于发布到 GitHub Pages。</p>\n<h2 id=\"操作步骤\"><a class=\"headerlink\" href=\"#操作步骤\"></a>操作步骤</h2>\n<h3 id=\"1-初始化-Hexo-项目\"><a class=\"headerlink\" href=\"#1-初始化-Hexo-项目\"></a>1. 初始化 Hexo 项目</h3>\n<p>首先，在本地初始化你的 Hexo 项目。这一步会创建一个新的 Hexo 项目，并安装所需的依赖。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo init my-blog\n<span class=\"token builtin class-name\">cd</span> my-blog\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-初始化-Git-仓库\"><a class=\"headerlink\" href=\"#2-初始化-Git-仓库\"></a>2. 初始化 Git 仓库</h3>\n<p>在 Hexo 项目目录中初始化 Git 仓库，以便我们可以将项目推送到 GitHub。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> init<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"3-创建-hexo-分支\"><a class=\"headerlink\" href=\"#3-创建-hexo-分支\"></a>3. 创建 hexo 分支</h3>\n<p>创建一个新的分支 <code>hexo</code>，用于保存 Hexo 的源文件。默认情况下，我们会在这个分支上进行编辑和管理。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout <span class=\"token parameter variable\">-b</span> hexo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"4-推送-hexo-分支到-GitHub\"><a class=\"headerlink\" href=\"#4-推送-hexo-分支到-GitHub\"></a>4. 推送 hexo 分支到 GitHub</h3>\n<p>将 <code>hexo</code> 分支推送到 GitHub，并设置为默认分支。这样可以确保我们的源文件在 GitHub 上有备份，并且可以在多个设备上同步编辑。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin https://github.com/yourusername/yourrepo.git\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"Initial commit with Hexo source files\"</span>\n<span class=\"token function\">git</span> push <span class=\"token parameter variable\">-u</span> origin hexo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后，在 GitHub 仓库设置中，将 <code>hexo</code> 分支设置为默认分支：</p>\n<ol>\n<li>打开你的 GitHub 仓库。</li>\n<li>点击 “Settings”。</li>\n<li>在左侧菜单中点击 “Branches”。</li>\n<li>在 “Default branch” 下拉菜单中选择 <code>hexo</code>，然后点击 “Update”。</li>\n</ol>\n<h3 id=\"5-创建-master-分支\"><a class=\"headerlink\" href=\"#5-创建-master-分支\"></a>5. 创建 master 分支</h3>\n<p>切换到 <code>master</code> 分支，并将其用于保存 Hexo 生成的静态文件。这个分支将用于部署到 GitHub Pages。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout <span class=\"token parameter variable\">--orphan</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>删除所有文件，因为 <code>master</code> 分支只需要保存生成的静态文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>创建一个空的 README 文件并提交，以初始化 <code>master</code> 分支。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"# My Blog\"</span> <span class=\"token operator\">></span> README.md\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> README.md\n<span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"Initial commit for master branch\"</span>\n<span class=\"token function\">git</span> push <span class=\"token parameter variable\">-u</span> origin master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"6-配置-Hexo-部署\"><a class=\"headerlink\" href=\"#6-配置-Hexo-部署\"></a>6. 配置 Hexo 部署</h3>\n<p>在 Hexo 项目根目录下的 <code>_config.yml</code> 文件中配置部署设置，使 Hexo 能将生成的静态文件推送到 <code>master</code> 分支。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/yourusername/yourrepo.git\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>安装 Hexo 部署插件 <code>hexo-deployer-git</code>，使 Hexo 能通过 Git 进行部署。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git <span class=\"token parameter variable\">--save</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"7-生成和部署静态文件\"><a class=\"headerlink\" href=\"#7-生成和部署静态文件\"></a>7. 生成和部署静态文件</h3>\n<p>运行以下命令生成静态文件并部署到 <code>master</code> 分支：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo clean\nhexo generate\nhexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><code>hexo clean</code>：清理生成的文件。</li>\n<li><code>hexo generate</code>：生成静态文件。</li>\n<li><code>hexo deploy</code>：将生成的静态文件部署到 GitHub 上的 <code>master</code> 分支。</li>\n</ul>\n<h3 id=\"8-推送-Hexo-源文件到-hexo-分支\"><a class=\"headerlink\" href=\"#8-推送-Hexo-源文件到-hexo-分支\"></a>8. 推送 Hexo 源文件到 hexo 分支</h3>\n<p>每次更新 Hexo 源文件后，将它们推送到 <code>hexo</code> 分支，以确保源文件有备份。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"Update Hexo source files\"</span>\n<span class=\"token function\">git</span> push origin hexo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"验证配置\"><a class=\"headerlink\" href=\"#验证配置\"></a>验证配置</h2>\n<ol>\n<li><strong>确认 <code>hexo</code> 分支为默认分支</strong>：保存 Hexo 源文件，并便于多平台编辑。</li>\n<li><strong>确认 <code>master</code> 分支保存生成的静态文件</strong>：用于部署到 GitHub Pages，并确保网站正常访问。</li>\n</ol>\n",
            "tags": [
                "Blog"
            ]
        }
    ]
}