{
    "version": "https://jsonfeed.org/version/1",
    "title": "陆时忤的博客 • All posts by \"alist\" tag",
    "description": "要再见 不要再见",
    "home_page_url": "https://blog.aixcc.top",
    "items": [
        {
            "id": "https://blog.aixcc.top/2024/07/02/%E5%AE%9A%E6%9C%9F%E6%B8%85%E7%90%86Alist%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6/",
            "url": "https://blog.aixcc.top/2024/07/02/%E5%AE%9A%E6%9C%9F%E6%B8%85%E7%90%86Alist%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6/",
            "title": "定期清理Alist备份文件",
            "date_published": "2024-07-02T11:34:29.000Z",
            "content_html": "<h1 id=\"使用-Alist-和-Bash-脚本实现自动化管理\"><a class=\"headerlink\" href=\"#使用-Alist-和-Bash-脚本实现自动化管理\"></a>使用 Alist 和 Bash 脚本实现自动化管理</h1>\n<p>在上次的博客中，我们介绍了如何使用 Alist 来定时备份服务器上的一些文件。本篇博客将介绍如何编写一个 Bash 脚本，定期清理这些备份文件，节省存储空间。</p>\n<h3 id=\"为什么需要定期清理备份文件？\"><a class=\"headerlink\" href=\"#为什么需要定期清理备份文件？\"></a>为什么需要定期清理备份文件？</h3>\n<p>备份文件在系统维护中起着重要作用，但如果不加管理，长期积累的备份文件会占用大量存储空间，甚至可能导致磁盘空间不足的问题。定期清理过期的备份文件，可以有效释放存储资源，确保系统的高效运行。</p>\n<h3 id=\"利用-Alist-提供的接口实现定期清理\"><a class=\"headerlink\" href=\"#利用-Alist-提供的接口实现定期清理\"></a>利用 Alist 提供的接口实现定期清理</h3>\n<p>Alist 提供了 <code>POST /api/fs/list</code> 和 <code>POST /api/fs/remove</code> 接口，分别用于列出文件和删除文件。通过这两个接口，我们可以方便地实现定期清理备份文件的功能。</p>\n<h3 id=\"脚本功能\"><a class=\"headerlink\" href=\"#脚本功能\"></a>脚本功能</h3>\n<p>该 Bash 脚本的主要功能包括：</p>\n<ol>\n<li>列出备份目录中的所有文件。</li>\n<li>判断文件是否超过指定的时间（本文中设置为30天）。</li>\n<li>删除超过指定时间的文件。</li>\n<li>将操作结果记录到日志文件中。</li>\n</ol>\n<h3 id=\"脚本实现\"><a class=\"headerlink\" href=\"#脚本实现\"></a>脚本实现</h3>\n<p>首先，在 <code>/opt/alist</code> 目录下创建脚本文件和日志文件夹：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /opt/alist/log\n<span class=\"token builtin class-name\">cd</span> /opt/alist\n<span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> clean_backups.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>在 <code>clean_backups.sh</code> 文件中输入以下内容：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token comment\"># 设置日志文件</span>\n<span class=\"token assign-left variable\">LOG_FILE</span><span class=\"token operator\">=</span><span class=\"token string\">\"/opt/alist/log/clean_back_<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +<span class=\"token string\">'%Y%m%d%H%M%S'</span><span class=\"token variable\">)</span></span>.log\"</span>\n\n<span class=\"token comment\"># 删除超过30天的日志文件</span>\n<span class=\"token function\">find</span> /opt/alist/log <span class=\"token parameter variable\">-type</span> f <span class=\"token parameter variable\">-name</span> <span class=\"token string\">\"*.log\"</span> <span class=\"token parameter variable\">-mtime</span> +30 <span class=\"token parameter variable\">-exec</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 函数：带时间戳的echo</span>\n<span class=\"token function-name function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"[<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +<span class=\"token string\">'%Y-%m-%d %H:%M:%S'</span><span class=\"token variable\">)</span></span>] <span class=\"token variable\">$1</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> <span class=\"token parameter variable\">-a</span> <span class=\"token string\">\"<span class=\"token variable\">$LOG_FILE</span>\"</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># 读取token</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-f</span> /tmp/alist_token.txt <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Token file not found.\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n<span class=\"token assign-left variable\">AUTH_TOKEN</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> /tmp/alist_token.txt<span class=\"token variable\">)</span></span>\n\n<span class=\"token comment\"># 检查token是否读取成功</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-z</span> <span class=\"token string\">\"<span class=\"token variable\">$AUTH_TOKEN</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Token is empty.\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># 配置参数</span>\n<span class=\"token assign-left variable\">API_URL</span><span class=\"token operator\">=</span><span class=\"token string\">\"&lt;Alist 地址>\"</span>\n<span class=\"token assign-left variable\">LIST_ENDPOINT</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$API_URL</span>/api/fs/list\"</span>\n<span class=\"token assign-left variable\">REMOVE_ENDPOINT</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$API_URL</span>/api/fs/remove\"</span>\n<span class=\"token assign-left variable\">BACKUP_PATH</span><span class=\"token operator\">=</span><span class=\"token string\">\"&lt;Alist 存储路径>\"</span>\n\n<span class=\"token comment\"># 当前日期的时间戳（秒）</span>\n<span class=\"token assign-left variable\">CURRENT_DATE</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%s<span class=\"token variable\">)</span></span>\n\n<span class=\"token comment\"># 列出备份目录中的文件</span>\n<span class=\"token assign-left variable\">response</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span>  <span class=\"token parameter variable\">-X</span> POST <span class=\"token string\">\"<span class=\"token variable\">$LIST_ENDPOINT</span>\"</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Authorization: <span class=\"token variable\">$AUTH_TOKEN</span>\"</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Content-Type: application/json\"</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">-d</span> <span class=\"token string\">'&#123;\n    \"path\": \"'</span>\"$BACKUP_PATH<span class=\"token string\">\"'\"</span>\n<span class=\"token punctuation\">&#125;</span>'<span class=\"token variable\">)</span></span>\n\n<span class=\"token comment\"># 从response中解析出文件名和创建时间</span>\n<span class=\"token assign-left variable\">files</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$response</span>\"</span> <span class=\"token operator\">|</span> jq <span class=\"token parameter variable\">-r</span> <span class=\"token string\">'.data.content[] | select(.is_dir == false) | \"\\(.name) \\(.created)\"'</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token comment\"># 准备删除的文件列表</span>\n<span class=\"token assign-left variable\">delete_files</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-r</span> name created<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n  <span class=\"token comment\"># 转换创建日期为时间戳（秒）</span>\n  <span class=\"token assign-left variable\">created_date</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> <span class=\"token parameter variable\">-d</span> <span class=\"token string\">\"<span class=\"token variable\">$created</span>\"</span> +%s<span class=\"token variable\">)</span></span>\n  \n  <span class=\"token comment\"># 计算文件的年龄 （天）</span>\n  <span class=\"token assign-left variable\">age_days</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$((</span> <span class=\"token punctuation\">(</span>CURRENT_DATE <span class=\"token operator\">-</span> created_date<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">86400</span> <span class=\"token variable\">))</span></span>\n\n  <span class=\"token comment\"># 输出文件的年龄以供调试</span>\n  log <span class=\"token string\">\"File: <span class=\"token variable\">$name</span>, Created: <span class=\"token variable\">$created</span>, Age (days): <span class=\"token variable\">$age_days</span>\"</span>\n\n  <span class=\"token comment\"># 如果文件超过1天，添加到删除列表</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$age_days</span> <span class=\"token parameter variable\">-gt</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token assign-left variable\">delete_files</span><span class=\"token operator\">+=</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token variable\">$name</span>\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">done</span> <span class=\"token operator\">&lt;&lt;&lt;</span> <span class=\"token string\">\"<span class=\"token variable\">$files</span>\"</span>\n\n<span class=\"token comment\"># 输出将要删除的文件列表以供调试</span>\nlog <span class=\"token string\">\"Files to be deleted:\"</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">file</span> <span class=\"token keyword\">in</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;delete_files<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span>\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n  log <span class=\"token string\">\"<span class=\"token variable\">$file</span>\"</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># 删除过期文件</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;<span class=\"token operator\">#</span>delete_files<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span> <span class=\"token parameter variable\">-gt</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">file</span> <span class=\"token keyword\">in</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;delete_files<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span>\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n    <span class=\"token assign-left variable\">delete_response</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-X</span> POST <span class=\"token string\">\"<span class=\"token variable\">$REMOVE_ENDPOINT</span>\"</span> <span class=\"token punctuation\">\\</span>\n      <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Authorization: <span class=\"token variable\">$AUTH_TOKEN</span>\"</span> <span class=\"token punctuation\">\\</span>\n      <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Content-Type: application/json\"</span> <span class=\"token punctuation\">\\</span>\n      <span class=\"token parameter variable\">-d</span> <span class=\"token string\">'&#123;\n          \"names\": [\"'</span>\"$file<span class=\"token string\">\"'\"</span><span class=\"token punctuation\">]</span>,\n          <span class=\"token string\">\"dir\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"'\"</span>$BACKUP_PATH<span class=\"token string\">\"'\"</span>\n      <span class=\"token punctuation\">&#125;</span>'<span class=\"token variable\">)</span></span>\n    <span class=\"token assign-left variable\">delete_code</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$delete_response</span>\"</span> <span class=\"token operator\">|</span> jq <span class=\"token parameter variable\">-r</span> <span class=\"token string\">'.code'</span><span class=\"token variable\">)</span></span>\n    <span class=\"token assign-left variable\">delete_message</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$delete_response</span>\"</span> <span class=\"token operator\">|</span> jq <span class=\"token parameter variable\">-r</span> <span class=\"token string\">'.message'</span><span class=\"token variable\">)</span></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$delete_code</span>\"</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">200</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n      log <span class=\"token string\">\"Successfully deleted <span class=\"token variable\">$file</span>\"</span>\n    <span class=\"token keyword\">else</span>\n      log <span class=\"token string\">\"Failed to delete <span class=\"token variable\">$file</span>: <span class=\"token variable\">$delete_message</span>\"</span>\n    <span class=\"token keyword\">fi</span>\n  <span class=\"token keyword\">done</span>\n<span class=\"token keyword\">else</span>\n  log <span class=\"token string\">\"No files older than 15 day to delete.\"</span>\n<span class=\"token keyword\">fi</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>请将脚本中的 <code>API_URL</code> 和 <code>BACKUP_PATH</code> 替换为你自己的 Alist 地址和存储路径。</p>\n<p>保存并退出编辑器（在 vim 中按 <code>Esc</code>，然后输入 <code>:x</code> 回车保存）。</p>\n<h3 id=\"详细解释\"><a class=\"headerlink\" href=\"#详细解释\"></a>详细解释</h3>\n<ol>\n<li><strong>设置日志文件</strong>：日志文件名为 <code>clean_back_YYYYMMDDHHMMSS.log</code>，存储在 <code>/opt/alist/log</code> 目录中，记录脚本执行过程中的所有重要信息。</li>\n<li><strong>定义 <code>log</code> 函数</strong>：这个函数为日志信息添加时间戳，并将日志信息同时输出到控制台和日志文件中。</li>\n<li><strong>配置 API 参数</strong>：设置 API 的基础 URL、列出文件的端点和删除文件的端点，以及授权令牌和备份路径。</li>\n<li><strong>获取当前时间戳</strong>：使用 <code>date +%s</code> 获取当前时间的 Unix 时间戳（以秒为单位）。</li>\n<li><strong>列出备份目录中的文件</strong>：通过 Alist 提供的 <code>POST /api/fs/list</code> 接口获取备份目录中的文件列表，并使用 <code>jq</code> 提取文件名和创建日期。</li>\n<li><strong>计算文件年龄并判断是否需要删除</strong>：遍历文件列表，计算每个文件的年龄（以天为单位），如果文件超过30天，则将其添加到删除列表中。</li>\n<li><strong>输出将要删除的文件列表</strong>：记录需要删除的文件以供调试。</li>\n<li><strong>删除过期文件</strong>：通过 Alist 提供的 <code>POST /api/fs/remove</code> 接口删除超过30天的文件，并根据响应结果记录删除操作的状态。</li>\n</ol>\n<h3 id=\"运行脚本\"><a class=\"headerlink\" href=\"#运行脚本\"></a>运行脚本</h3>\n<p>将上述脚本保存为 <code>clean_backups.sh</code>，然后给脚本添加执行权限并运行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> +x clean_backups.sh\n./clean_backups.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"定时任务\"><a class=\"headerlink\" href=\"#定时任务\"></a>定时任务</h3>\n<p>为了让脚本定期运行，可以使用 <code>cron</code> 设置定时任务。例如，每天凌晨 2点运行脚本：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">crontab</span> <span class=\"token parameter variable\">-e</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在 <code>crontab</code> 编辑器中添加以下行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">0</span> <span class=\"token number\">2</span> * * * /opt/alist/clean_backups.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>保存并退出编辑器（在 vim 中按 <code>Esc</code>，然后输入 <code>:x</code> 回车保存）。</p>\n<p>通过这种方式，您可以自动化清理过期的备份文件，并将操作结果记录到日志文件中，方便日后查看和调试。定期清理备份文件有助于保持系统的整洁，确保服务器的高效运行。</p>\n<hr>\n<p>以上就是使用 Alist 和 Bash 脚本实现自动化清理备份文件的完整方法。希望这篇博客对您有所帮助！如果有任何问题或建议，欢迎在评论区留言讨论。</p>\n",
            "tags": [
                "Alist"
            ]
        },
        {
            "id": "https://blog.aixcc.top/2024/06/18/%E4%BD%BF%E7%94%A8AList%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%87%E4%BB%B6/",
            "url": "https://blog.aixcc.top/2024/06/18/%E4%BD%BF%E7%94%A8AList%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%87%E4%BB%B6/",
            "title": "使用AList定时备份文件",
            "date_published": "2024-06-18T08:37:21.000Z",
            "content_html": "<h1 id=\"使用AList定时备份文件\"><a class=\"headerlink\" href=\"#使用AList定时备份文件\"></a>使用AList定时备份文件</h1>\n<p>本教程详细介绍如何使用 <code>AList</code> 通过 <code>API</code> 自动备份服务器文件，包括获取 <code>JWT Token</code> 和自动上传备份文件至 <code>AList</code> 服务器。</p>\n<h2 id=\"环境配置\"><a class=\"headerlink\" href=\"#环境配置\"></a>环境配置</h2>\n<p>首先，确保服务器上安装了 <code>curl</code> 和 <code>jq</code>。<code>curl</code> 用于发送 <code>HTTP</code> 请求，而 <code>jq</code> 用于解析 <code>JSON</code> 响应。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">curl</span> jq<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"设置环境变量\"><a class=\"headerlink\" href=\"#设置环境变量\"></a>设置环境变量</h3>\n<p>为确保脚本能自动读取 <code>AList</code> 的用户名和密码，在服务器的环境变量中设置，避免在脚本中硬编码敏感信息，提高安全性。<br>\n通过在服务器的 <code>~/.bashrc</code> 或 <code>~/.profile</code> 文件中添加以下行来永久设置环境变量：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">ALIST_USERNAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"&lt;your_username>\"</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">ALIST_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token string\">\"&lt;your_password>\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>确保替换 “your_username” 和 “your_password” 为你的 AList 登录用户名和密码。</p>\n<h3 id=\"应用环境变量\"><a class=\"headerlink\" href=\"#应用环境变量\"></a>应用环境变量</h3>\n<p>修改文件后，为使环境变量立即生效，执行以下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">source</span> ~/.bashrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>或者，如果你是在 ~/.profile 中设置的环境变量，使用：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">source</span> ~/.profile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这样设置后，每当脚本执行时，它将能从这些环境变量中读取所需的用户名和密码。</p>\n<h2 id=\"获取-JWT-Token\"><a class=\"headerlink\" href=\"#获取-JWT-Token\"></a>获取 JWT Token</h2>\n<p>要与 <code>AList</code> 的 <code>API</code> 交互，首先需要获取一个有效的 JWT Token。以下步骤展示如何通过登录 <code>API</code> 获取 <code>Token</code>。</p>\n<h3 id=\"创建-Token-获取脚本\"><a class=\"headerlink\" href=\"#创建-Token-获取脚本\"></a>创建 Token 获取脚本</h3>\n<ul>\n<li><strong>脚本位置</strong>：在 <code>/opt/alist</code> 目录下创建 <code>get_token.sh</code> 脚本。</li>\n<li><strong>编辑脚本</strong>：使用 <code>Vim</code> 或任意文本编辑器创建和编辑 <code>get_token.sh</code> 文件。</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">touch</span> /opt/alist/get_token.sh\n<span class=\"token function\">vim</span> /opt/alist/get_token.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ul>\n<li><strong>脚本内容</strong>：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token comment\"># 读取环境变量中的用户名和密码</span>\n<span class=\"token assign-left variable\">alist_username</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$ALIST_USERNAME</span>\"</span>\n<span class=\"token assign-left variable\">alist_password</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$ALIST_PASSWORD</span>\"</span>\n\n<span class=\"token comment\"># 使用curl发送POST请求获取token</span>\n<span class=\"token assign-left variable\">response</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-k</span> <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-X</span> POST <span class=\"token string\">\"http://&lt;服务器域名或IP地址>:&lt;端口号>/api/auth/login\"</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Content-Type: application/json\"</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">-d</span> <span class=\"token string\">\"&#123;<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>username<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>:<span class=\"token entity\" title=\"\\&quot;\">\\\"</span><span class=\"token variable\">$alist_username</span><span class=\"token entity\" title=\"\\&quot;\">\\\"</span>, <span class=\"token entity\" title=\"\\&quot;\">\\\"</span>password<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>:<span class=\"token entity\" title=\"\\&quot;\">\\\"</span><span class=\"token variable\">$alist_password</span><span class=\"token entity\" title=\"\\&quot;\">\\\"</span>&#125;\"</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token comment\"># 解析响应获取token</span>\n<span class=\"token comment\"># 检查token是否成功获取</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-z</span> <span class=\"token string\">\"<span class=\"token variable\">$token</span>\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$token</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"null\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Failed to get token\"</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">else</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Token retrieved successfully\"</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$token</span> <span class=\"token operator\">></span> /tmp/alist_token.txt\n<span class=\"token keyword\">fi</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><strong>赋予脚本执行权限</strong>：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> +x /opt/alist/get_token.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"上传备份文件\"><a class=\"headerlink\" href=\"#上传备份文件\"></a>上传备份文件</h2>\n<p>使用 PUT <code>/api/fs/put</code> API 上传备份文件。创建一个脚本自动执行备份和上传。</p>\n<h3 id=\"创建上传脚本\"><a class=\"headerlink\" href=\"#创建上传脚本\"></a>创建上传脚本</h3>\n<ul>\n<li><strong>脚本位置</strong>：在 <code>/opt/alist</code> 目录下创建 <code>upload_backup.sh</code> 脚本。</li>\n<li><strong>编辑脚本</strong>：使用 <code>Vim</code> 或任意文本编辑器创建和编辑 <code>upload_backup.sh</code> 文件。</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">touch</span> /opt/alist/upload_backup.sh\n<span class=\"token function\">vim</span> /opt/alist/upload_backup.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ul>\n<li><strong>脚本内容</strong>：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token comment\"># 日志文件夹位置</span>\n<span class=\"token assign-left variable\">LOG_FILE</span><span class=\"token operator\">=</span><span class=\"token string\">\"/opt/alist/log/upload_back_<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +<span class=\"token string\">'%Y%m%d%H%M%S'</span><span class=\"token variable\">)</span></span>.log\"</span>\n\n<span class=\"token comment\"># 函数：带时间戳的echo</span>\n<span class=\"token function-name function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"[<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +<span class=\"token string\">'%Y-%m-%d %H:%M:%S'</span><span class=\"token variable\">)</span></span>] <span class=\"token variable\">$1</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> <span class=\"token parameter variable\">-a</span> <span class=\"token string\">\"<span class=\"token variable\">$LOG_FILE</span>\"</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># 删除超过30天的日志文件</span>\n<span class=\"token function\">find</span> /opt/alist/log <span class=\"token parameter variable\">-type</span> f <span class=\"token parameter variable\">-name</span> <span class=\"token string\">\"*.log\"</span> <span class=\"token parameter variable\">-mtime</span> +30 <span class=\"token parameter variable\">-exec</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 目标 API URL</span>\n<span class=\"token assign-left variable\">API_URL</span><span class=\"token operator\">=</span><span class=\"token string\">\"https://&lt;alist服务器域名或IP地址>/api/fs/put\"</span>\n\n<span class=\"token comment\"># 要备份的目录</span>\n<span class=\"token assign-left variable\">BACKUP_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"/opt/alist/data\"</span>\n\n<span class=\"token comment\"># 备份文件存储位置，包含时间戳</span>\n<span class=\"token assign-left variable\">BACKUP_PATH</span><span class=\"token operator\">=</span><span class=\"token string\">\"/tmp/alist/alist_backup_<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%Y%m%d%H%M%S<span class=\"token variable\">)</span></span>.tar.gz\"</span>\n\n<span class=\"token comment\"># 创建备份文件</span>\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-czf</span> <span class=\"token string\">\"<span class=\"token variable\">$BACKUP_PATH</span>\"</span> <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"<span class=\"token variable\">$BACKUP_DIR</span>\"</span> <span class=\"token builtin class-name\">.</span>\n\n<span class=\"token comment\"># 获取文件大小</span>\n<span class=\"token assign-left variable\">CONTENT_LENGTH</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">stat</span> <span class=\"token parameter variable\">-c</span> %s <span class=\"token string\">\"<span class=\"token variable\">$BACKUP_PATH</span>\"</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token comment\"># URL编码的完整目标文件路径</span>\n<span class=\"token assign-left variable\">ENCODED_FILE_PATH</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">\"&lt;alist上的路径><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">basename</span> $BACKUP_PATH<span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">|</span> jq <span class=\"token parameter variable\">-sRr</span> @uri<span class=\"token variable\">)</span></span>\n\n<span class=\"token comment\"># 读取存储的token</span>\n<span class=\"token assign-left variable\">token</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> /tmp/alist_token.txt<span class=\"token variable\">)</span></span>\n\n<span class=\"token comment\"># 使用curl PUT请求上传文件</span>\n<span class=\"token assign-left variable\">response</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-X</span> PUT <span class=\"token string\">\"<span class=\"token variable\">$API_URL</span>\"</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Authorization: <span class=\"token variable\">$token</span>\"</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"File-Path: <span class=\"token variable\">$ENCODED_FILE_PATH</span>\"</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Content-Type: application/octet-stream\"</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Content-Length: <span class=\"token variable\">$CONTENT_LENGTH</span>\"</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">-T</span> <span class=\"token string\">\"<span class=\"token variable\">$BACKUP_PATH</span>\"</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token comment\"># 检查上传是否成功并记录日志</span>\nlog <span class=\"token string\">\"<span class=\"token variable\">$response</span>\"</span>\n<span class=\"token comment\"># 删除本地临时备份文件</span>\n<span class=\"token function\">rm</span> <span class=\"token string\">\"<span class=\"token variable\">$BACKUP_PATH</span>\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    log <span class=\"token string\">\"Local backup file deleted\"</span>\n<span class=\"token keyword\">else</span>\n    log <span class=\"token string\">\"Failed to delete local backup file\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><strong>赋予脚本执行权限</strong>：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> +x /opt/alist/upload_backup.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"设置定时任务\"><a class=\"headerlink\" href=\"#设置定时任务\"></a>设置定时任务</h2>\n<p>使用 <code>crontab -e</code> 添加定时任务自动执行以上脚本。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">0</span> <span class=\"token number\">1</span> * * * /opt/alist/get_token.sh\n<span class=\"token number\">5</span> <span class=\"token number\">1</span> * * * /opt/alist/upload_backup.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>这将在每天凌晨 1 点自动获取新的 <code>Token</code>，并在五分钟后上传最新的备份文件。</p>\n<h2 id=\"日志记录\"><a class=\"headerlink\" href=\"#日志记录\"></a>日志记录</h2>\n<p>考虑将脚本的输出重定向到日志文件中，以便跟踪操作历史和错误。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">0</span> <span class=\"token number\">1</span> * * * /opt/alist/get_token.sh <span class=\"token operator\">>></span> /var/log/alist_backup.log <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span>\n<span class=\"token number\">5</span> <span class=\"token number\">1</span> * * * /opt/alist/upload_backup.sh <span class=\"token operator\">>></span> /var/log/alist_backup.log <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>这样，你就有了一个自动化的、具备日志记录功能的服务器文件备份系统，使用 <code>AList</code> 完成文件的存储和备份。</p>\n<hr>\n",
            "tags": [
                "Alist"
            ]
        }
    ]
}