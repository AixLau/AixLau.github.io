{
    "version": "https://jsonfeed.org/version/1",
    "title": "陆时忤的博客 • All posts by \"mac\" category",
    "description": "要再见 不要再见",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/07/14/Mac%E5%AE%89%E8%A3%85Maven/",
            "url": "http://example.com/2024/07/14/Mac%E5%AE%89%E8%A3%85Maven/",
            "title": "Mac安装Maven",
            "date_published": "2024-07-14T14:25:37.000Z",
            "content_html": "<h1 id=\"Maven-环境设置：全面指南\"><a class=\"headerlink\" href=\"#Maven-环境设置：全面指南\"></a>Maven 环境设置：全面指南</h1>\n<blockquote>\n<p>Apache Maven 是 Java 项目的强大项目管理工具，可以自动化并简化构建过程。本指南将指导你完成在机器上设置 Maven 的步骤，包括安装 Java、Maven 以及配置开发环境。</p>\n</blockquote>\n<h2 id=\"前提条件\"><a class=\"headerlink\" href=\"#前提条件\"></a>前提条件</h2>\n<p>在安装 Maven 之前，你需要确保计算机上已安装 Java 开发工具包（JDK）。Maven 3.3+ 需要 JDK 1.7 或更高版本才能运行。</p>\n<h3 id=\"1-检查-Java-安装\"><a class=\"headerlink\" href=\"#1-检查-Java-安装\"></a>1. 检查 Java 安装</h3>\n<p>打开终端并输入：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">java</span> <span class=\"token parameter variable\">-version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此命令将显示当前安装的 Java 版本。如果未安装 Java，请访问 <a href=\"https://blog.aixcc.top//2024/07/14/Mac%E5%AE%89%E8%A3%85JDK\">Mac 安装 JDK</a> 获取详细的安装教程</p>\n<h2 id=\"下载-Maven\"><a class=\"headerlink\" href=\"#下载-Maven\"></a>下载 Maven</h2>\n<ol>\n<li>\n<p>访问 <a href=\"https://maven.apache.org/download.cgi\">Maven 下载页面</a>。</p>\n<p><img src=\"https://alist.aixcc.top/d/OneDrive/img/202407151215642.webp\" alt=\"\" loading=\"lazy\"></p>\n</li>\n<li>\n<p>下载二进制归档文件（例如 <code>apache-maven-3.8.6-bin.tar.gz</code>）。</p>\n</li>\n</ol>\n<h2 id=\"安装-Maven\"><a class=\"headerlink\" href=\"#安装-Maven\"></a>安装 Maven</h2>\n<ol>\n<li>将下载的归档文件解压到你选择的目录。在基于 Unix 的系统上，一个常见的目录是 <code>/opt</code>。（也可以根据个人喜好选择其它目录）</li>\n</ol>\n<h2 id=\"配置环境\"><a class=\"headerlink\" href=\"#配置环境\"></a>配置环境</h2>\n<ol>\n<li>使用文本编辑器打开你的 shell 配置文件（例如，如果你使用 zsh，则为 <code>.zshrc</code>）：<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> ~/.zshrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>将 Maven 二进制文件添加到你的 PATH：<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>/opt/apache-maven-3.8.6/bin:<span class=\"token environment constant\">$PATH</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>保存文件并应用更改：<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">source</span> ~/.zshrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ol>\n<h3 id=\"验证\"><a class=\"headerlink\" href=\"#验证\"></a>验证</h3>\n<p>要验证 Maven 是否正确安装，请键入：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mvn <span class=\"token parameter variable\">-v</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此命令应显示 Maven 版本、Java 版本和操作系统详细信息。</p>\n<p><img src=\"https://alist.aixcc.top/d/OneDrive/img/202407151239977.webp\" alt=\"\" loading=\"lazy\"></p>\n<h2 id=\"配置-Maven\"><a class=\"headerlink\" href=\"#配置-Maven\"></a>配置 Maven</h2>\n<h3 id=\"设置本地仓库\"><a class=\"headerlink\" href=\"#设置本地仓库\"></a>设置本地仓库</h3>\n<p>Maven 将所有依赖项存储在本地。你可以在 Maven 配置文件中指定此仓库的自定义位置：</p>\n<p>编辑 <code>/opt/apache-maven-3.8.6/conf/settings.xml</code> 并添加以下内容：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>localRepository</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>存储路径</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>localRepository</span><span class=\"token punctuation\">></span></span>\n# 例如<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>localRepository</span><span class=\"token punctuation\">></span></span>/Users/lushiwu/Data/maven-repository<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>localRepository</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"配置仓库镜像\"><a class=\"headerlink\" href=\"#配置仓库镜像\"></a>配置仓库镜像</h3>\n<p>为了加速依赖项下载，配置如阿里云等镜像：</p>\n<p>在 <code>settings.xml</code> 文件的 <code>&lt;mirrors&gt;</code> 部分添加以下内容：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mirror</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>aliyunmaven<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mirrorOf</span><span class=\"token punctuation\">></span></span>*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mirrorOf</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">></span></span>阿里云 Maven 镜像<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url</span><span class=\"token punctuation\">></span></span>https://maven.aliyun.com/repository/public<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mirror</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"在-IntelliJ-IDEA-中配置-Maven\"><a class=\"headerlink\" href=\"#在-IntelliJ-IDEA-中配置-Maven\"></a>在 IntelliJ IDEA 中配置 Maven</h2>\n<ol>\n<li>打开 IntelliJ IDEA。</li>\n<li>导航至 <code>设置</code> &gt; <code>构建、执行、部署</code> &gt; <code>构建工具</code> &gt; <code>Maven</code>。</li>\n<li>指定 <code>Maven 主目录</code> 为 <code>/opt/apache-maven-3.8.6</code>。</li>\n<li>设置 <code>用户设置文件</code> 为你刚配置的 <code>settings.xml</code>。</li>\n</ol>\n<p><img src=\"https://alist.aixcc.top/d/OneDrive/img/202407151215660.webp\" alt=\"\" loading=\"lazy\"></p>\n",
            "tags": [
                "Mac",
                "Maven"
            ]
        },
        {
            "id": "http://example.com/2024/07/14/Mac%E5%AE%89%E8%A3%85JDK/",
            "url": "http://example.com/2024/07/14/Mac%E5%AE%89%E8%A3%85JDK/",
            "title": "Mac安装JDK",
            "date_published": "2024-07-14T14:13:37.000Z",
            "content_html": "<h1 id=\"Mac-上的-JDK-的安装与卸载\"><a class=\"headerlink\" href=\"#Mac-上的-JDK-的安装与卸载\"></a>Mac 上的 JDK 的安装与卸载</h1>\n<h2 id=\"从-AdoptOpenJDK-到-Temurin\"><a class=\"headerlink\" href=\"#从-AdoptOpenJDK-到-Temurin\"></a>从 AdoptOpenJDK 到 Temurin</h2>\n<h2 id=\"卸载-AdoptOpenJDK\"><a class=\"headerlink\" href=\"#卸载-AdoptOpenJDK\"></a>卸载 AdoptOpenJDK</h2>\n<p>如果您的系统中安装了 AdoptOpenJDK，并且想要替换或升级 JDK 版本，可以按照以下步骤进行卸载：</p>\n<h3 id=\"步骤-1：卸载-AdoptOpenJDK\"><a class=\"headerlink\" href=\"#步骤-1：卸载-AdoptOpenJDK\"></a>步骤 1：卸载 AdoptOpenJDK</h3>\n<p>打开终端，并使用 Homebrew Cask 进行卸载。如果您尚未安装 Homebrew，请访问 <a href=\"https://blog.aixcc.top/2024/07/14/%E5%AE%89%E8%A3%85Homebrew/\">Homebrew 安装指南</a> 获取详细的安装教程。以卸载 adoptopenjdk8 为例，输入以下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew remove <span class=\"token parameter variable\">--cask</span> adoptopenjdk8<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>重复上述命令，替换 <code>adoptopenjdk8</code> 为其他版本号以卸载其他版本的 JDK。</p>\n<h3 id=\"步骤-2：移除-Homebrew-的-Tap\"><a class=\"headerlink\" href=\"#步骤-2：移除-Homebrew-的-Tap\"></a>步骤 2：移除 Homebrew 的 Tap</h3>\n<p>完成所有版本的卸载后，执行以下命令来移除 AdoptOpenJDK 的 tap：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew untap AdoptOpenJDK/openjdk<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这样就和 AdoptOpenJDK 完成了告别。</p>\n<h2 id=\"清除旧的-Oracle-JDK\"><a class=\"headerlink\" href=\"#清除旧的-Oracle-JDK\"></a>清除旧的 Oracle JDK</h2>\n<p>对于仍在使用 Oracle JDK 的用户，也是时候更新了。请按照以下步骤从您的系统中彻底清除 Oracle JDK：</p>\n<h3 id=\"步骤-3：删除旧的-JDK-文件\"><a class=\"headerlink\" href=\"#步骤-3：删除旧的-JDK-文件\"></a>步骤 3：删除旧的 JDK 文件</h3>\n<p>删除 <code>/Library/Java/JavaVirtualMachines/</code> 目录下的 JDK 文件夹。此外，清理以下位置的内容：</p>\n<ul>\n<li><code>/Library/Internet Plug-Ins/JavaAppletPlugin.plugin</code></li>\n<li><code>/Library/PreferencePanes/JavaControlPanel.prefPane</code></li>\n<li><code>~/Library/Application Support/Oracle/Java</code></li>\n</ul>\n<h2 id=\"安装-Temurin-JDK\"><a class=\"headerlink\" href=\"#安装-Temurin-JDK\"></a>安装 Temurin JDK</h2>\n<p>在清除旧的 JDK 之后，我们将安装 Temurin，这是 AdoptOpenJDK 的继任者，由 Eclipse Foundation 维护。</p>\n<h3 id=\"步骤-4：配置-Homebrew-Cask-版本\"><a class=\"headerlink\" href=\"#步骤-4：配置-Homebrew-Cask-版本\"></a>步骤 4：配置 Homebrew Cask 版本</h3>\n<p>首先，确保你的 Homebrew 能够访问所有 cask 版本：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew search temurin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://alist.aixcc.top/d/OneDrive/img/202407151217190.webp\" alt=\"\" loading=\"lazy\"></p>\n<h3 id=\"步骤-5：安装-Temurin\"><a class=\"headerlink\" href=\"#步骤-5：安装-Temurin\"></a>步骤 5：安装 Temurin</h3>\n<p>现在，您可以安装所需版本的 Temurin。例如，要安装 Temurin@8，运行以下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> <span class=\"token parameter variable\">--cask</span> temurin@8<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"结论\"><a class=\"headerlink\" href=\"#结论\"></a>结论</h2>\n<p>通过以上步骤，您可以在 Mac 上轻松切换 JDK 版本。无论是卸载旧的 AdoptOpenJDK 还是安装新的 Temurin JDK，都能确保您的开发环境与 Java 的最新进展保持同步。</p>\n",
            "tags": [
                "Java",
                "Mac"
            ]
        },
        {
            "id": "http://example.com/2024/07/14/%E5%AE%89%E8%A3%85Homebrew/",
            "url": "http://example.com/2024/07/14/%E5%AE%89%E8%A3%85Homebrew/",
            "title": "安装Homebrew",
            "date_published": "2024-07-14T12:10:50.000Z",
            "content_html": "<h1 id=\"Mac-上安装-Homebrew：一步一步的指南\"><a class=\"headerlink\" href=\"#Mac-上安装-Homebrew：一步一步的指南\"></a>Mac 上安装 Homebrew：一步一步的指南</h1>\n<h2 id=\"什么是-Homebrew？\"><a class=\"headerlink\" href=\"#什么是-Homebrew？\"></a>什么是 Homebrew？</h2>\n<p><a href=\"https://brew.sh/\">Homebrew</a> 是 Mac OS X 或 Linux 上的一款自由和开源的软件包管理系统，它简化了软件的安装过程。它允许用户方便地安装、配置、更新和卸载开源软件。它的设计理念是简化没有访问权限的用户在 macOS 上安装软件的过程。</p>\n<h2 id=\"安装前的准备\"><a class=\"headerlink\" href=\"#安装前的准备\"></a>安装前的准备</h2>\n<p>在安装 Homebrew 之前，请确保您的 Mac 符合以下条件：</p>\n<ul>\n<li>macOS 系统 (或 OS X 至少 10.10 及以上版本)</li>\n<li>有权访问 macOS 的终端（Terminal）</li>\n<li>安装了 Xcode 的命令行工具</li>\n</ul>\n<h3 id=\"安装-Xcode-命令行工具\"><a class=\"headerlink\" href=\"#安装-Xcode-命令行工具\"></a>安装 Xcode 命令行工具</h3>\n<p>打开终端，输入以下命令来安装 Xcode 的命令行工具：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">xcode-select <span class=\"token parameter variable\">--install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>系统会弹出一个安装窗口，点击“安装”即可开始下载并安装所需的工具。</p>\n<h2 id=\"安装-Homebrew\"><a class=\"headerlink\" href=\"#安装-Homebrew\"></a>安装 Homebrew</h2>\n<p>完成 Xcode 命令行工具的安装后，您就可以安装 Homebrew 了。在终端中输入以下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">/bin/bash <span class=\"token parameter variable\">-c</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class=\"token variable\">)</span></span>\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此脚本将会下载并执行 Homebrew 的安装程序。过程中可能会要求您输入系统密码，因为安装涉及到对系统级目录的写入操作。</p>\n<h2 id=\"安装后的配置\"><a class=\"headerlink\" href=\"#安装后的配置\"></a>安装后的配置</h2>\n<p>安装完成后，按照终端中显示的指示，您可能需要添加 Homebrew 的路径到您的 shell 配置文件中。对于 bash 用户，可以添加以下行到 <code>~/.bash_profile</code>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'eval \"$(/opt/homebrew/bin/brew shellenv)\"'</span> <span class=\"token operator\">>></span> ~/.bash_profile\n<span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>/opt/homebrew/bin/brew shellenv<span class=\"token variable\">)</span></span>\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>如果您使用的是 zsh，应添加到 <code>~/.zshrc</code> 文件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'eval \"$(/opt/homebrew/bin/brew shellenv)\"'</span> <span class=\"token operator\">>></span> ~/.zshrc\n<span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>/opt/homebrew/bin/brew shellenv<span class=\"token variable\">)</span></span>\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"验证安装\"><a class=\"headerlink\" href=\"#验证安装\"></a>验证安装</h2>\n<p>安装完成后，重新启动终端或者运行以下命令来配置 shell：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">source</span> ~/.bash_profile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>或者，对于 zsh 用户：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">source</span> ~/.zshrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后，您可以运行以下命令来检查 Homebrew 是否安装成功：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew doctor<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果显示 “Your system is ready to brew” 的信息，恭喜您，您已经成功安装并配置了 Homebrew。</p>\n<p><img src=\"https://alist.aixcc.top/d/OneDrive/img/202407151218277.webp\" alt=\"\" loading=\"lazy\"></p>\n<h2 id=\"结论\"><a class=\"headerlink\" href=\"#结论\"></a>结论</h2>\n<p>通过安装 Homebrew，您的 Mac 将能够轻松地管理大量开源软件，从而大大提高您的生产效率和工作流程。无论您是开发人员还是日常用户，Homebrew 都是一个宝贵的工具，可以帮助您维护软件的最新状态。</p>\n",
            "tags": [
                "Mac",
                "Homebrew"
            ]
        },
        {
            "id": "http://example.com/2024/06/26/%E8%84%9A%E6%9C%AC/",
            "url": "http://example.com/2024/06/26/%E8%84%9A%E6%9C%AC/",
            "title": "自定义 Alfred iTerm 脚本",
            "date_published": "2024-06-26T04:29:32.000Z",
            "content_html": "<h2 id=\"如何使用Alfred与iTerm2进行高效的命令行操作\"><a class=\"headerlink\" href=\"#如何使用Alfred与iTerm2进行高效的命令行操作\"></a>如何使用Alfred与iTerm2进行高效的命令行操作</h2>\n<p>这里是一篇关于如何使用 Alfred 和 iTerm2 集成自定义 AppleScript 的博客文章。这个集成可以极大地提升 macOS 用户在使用终端时的效率和便利性。</p>\n<blockquote>\n<p>对于 macOS 用户来说，Alfred 和 iTerm2 是两个非常强大的工具。Alfred 作为一款效率提升工具，能够通过快捷键和简单的命令来执行各种操作，而 iTerm2 则是一个功能丰富的替代 macOS 默认终端的应用。将这两者结合起来，你可以通过简单的 Alfred 命令来控制 iTerm2，执行脚本或者打开新的终端会话。</p>\n</blockquote>\n<h3 id=\"自定义-Alfred-通过-iTerm2-执行脚本的步骤\"><a class=\"headerlink\" href=\"#自定义-Alfred-通过-iTerm2-执行脚本的步骤\"></a>自定义 Alfred 通过 iTerm2 执行脚本的步骤</h3>\n<h4 id=\"第一步：获取脚本\"><a class=\"headerlink\" href=\"#第一步：获取脚本\"></a>第一步：获取脚本</h4>\n<p>首先，你需要<a href=\"https://github.com/vitorgalvao/custom-alfred-iterm-scripts\">获取</a>一个可以将 Alfred 和 iTerm2 集成的 AppleScript。这个脚本定义了如何通过 Alfred 命令来控制 iTerm2。使用以下命令可以将脚本直接复制到你的剪贴板：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">--silent</span> <span class=\"token string\">'https://raw.githubusercontent.com/vitorgalvao/custom-alfred-iterm-scripts/master/custom_iterm_script.applescript'</span> <span class=\"token operator\">|</span> pbcopy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"第二步：配置-Alfred\"><a class=\"headerlink\" href=\"#第二步：配置-Alfred\"></a>第二步：配置 Alfred</h4>\n<p>打开 Alfred 的偏好设置：</p>\n<ol>\n<li>打开 Alfred 的偏好设置（通过呼叫 Alfred 并按 <code>⌘,</code>）。</li>\n<li>导航到“功能” → “终端 / Shell” → “自定义”。</li>\n<li>在“Application”下拉菜单中选择“自定义”，然后粘贴你的脚本到文本框中。</li>\n</ol>\n<h4 id=\"第三步：自定义脚本行为\"><a class=\"headerlink\" href=\"#第三步：自定义脚本行为\"></a>第三步：自定义脚本行为</h4>\n<p>脚本的顶部有几个 <code>property</code> 设置，可以根据你的需要进行调整：</p>\n<ul>\n<li><code>open_in_new_window</code>: 设置为 <code>true</code> 可以让每个 Alfred 命令在新窗口中打开。</li>\n<li><code>open_in_new_tab</code>: 设置为 <code>true</code> 会在新标签页中打开命令，<code>false</code> 则在当前标签页重用。</li>\n<li><code>iterm2_opens_quietly</code>: 如果你的 iTerm2 配置为启动时不打开新窗口，将此设为 <code>true</code>。</li>\n</ul>\n<h4 id=\"第四步：使用\"><a class=\"headerlink\" href=\"#第四步：使用\"></a>第四步：使用</h4>\n<p>完成设置后，你可以通过 Alfred 运行任何命令。比如，通过 Alfred 的搜索框输入 <code>&gt; ls</code>，这个命令就会在 iTerm2 的当前窗口中执行，显示当前目录的内容。</p>\n<p><strong>转载自GitHub:</strong> <a href=\"https://github.com/vitorgalvao/custom-alfred-iterm-scripts\">vitorgalvao/custom-alfred-iterm-scripts</a></p>\n",
            "tags": [
                "Mac"
            ]
        }
    ]
}