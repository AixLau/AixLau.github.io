<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>陆时忤的博客 • Posts by &#34;博客&#34; category</title>
        <link>https://blog.aixcc.top</link>
        <description>要再见 不要再见</description>
        <language>zh-CN</language>
        <pubDate>Sun, 16 Jun 2024 19:19:00 +0800</pubDate>
        <lastBuildDate>Sun, 16 Jun 2024 19:19:00 +0800</lastBuildDate>
        <category>Blog</category>
        <category>Java</category>
        <category>笔记</category>
        <category>MySQL</category>
        <category>Linux</category>
        <category>Mac</category>
        <category>Maven</category>
        <category>MyBatis</category>
        <category>总结</category>
        <category>RabbitMQ</category>
        <category>Redis</category>
        <category>Spring</category>
        <category>Alist</category>
        <category>Vue</category>
        <category>前端</category>
        <category>Homebrew</category>
        <category>SSL</category>
        <category>域名</category>
        <item>
            <guid isPermalink="true">https://blog.aixcc.top/2024/06/16/Hexo%E5%A4%87%E4%BB%BD/</guid>
            <title>Hexo备份</title>
            <link>https://blog.aixcc.top/2024/06/16/Hexo%E5%A4%87%E4%BB%BD/</link>
            <category>Blog</category>
            <pubDate>Sun, 16 Jun 2024 19:19:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;使用-Hexo-和-GitHub-实现多平台工作和数据备份&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#使用-Hexo-和-GitHub-实现多平台工作和数据备份&#34;&gt;&lt;/a&gt;使用 Hexo 和 GitHub 实现多平台工作和数据备份&lt;/h1&gt;
&lt;h2 id=&#34;目标&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#目标&#34;&gt;&lt;/a&gt;目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;master&lt;/code&gt; 分支&lt;/strong&gt;：保存 Hexo 生成的静态文件，用于部署到 GitHub Pages。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;hexo&lt;/code&gt; 分支&lt;/strong&gt;：保存 Hexo 源文件，便于本地编辑和备份，并设置为默认分支。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;为什么要这样做？&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#为什么要这样做？&#34;&gt;&lt;/a&gt;为什么要这样做？&lt;/h2&gt;
&lt;p&gt;使用两个分支的目的是将生成的静态文件和源文件分开管理，以便在多个设备上编辑博客，同时保持数据的安全备份。&lt;code&gt;hexo&lt;/code&gt; 分支保存源文件，方便我们在不同平台进行编辑；&lt;code&gt;master&lt;/code&gt; 分支保存静态文件，用于发布到 GitHub Pages。&lt;/p&gt;
&lt;h2 id=&#34;操作步骤&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#操作步骤&#34;&gt;&lt;/a&gt;操作步骤&lt;/h2&gt;
&lt;h3 id=&#34;1-初始化-Hexo-项目&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#1-初始化-Hexo-项目&#34;&gt;&lt;/a&gt;1. 初始化 Hexo 项目&lt;/h3&gt;
&lt;p&gt;首先，在本地初始化你的 Hexo 项目。这一步会创建一个新的 Hexo 项目，并安装所需的依赖。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;hexo init my-blog
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; my-blog
&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-初始化-Git-仓库&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#2-初始化-Git-仓库&#34;&gt;&lt;/a&gt;2. 初始化 Git 仓库&lt;/h3&gt;
&lt;p&gt;在 Hexo 项目目录中初始化 Git 仓库，以便我们可以将项目推送到 GitHub。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; init&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-创建-hexo-分支&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#3-创建-hexo-分支&#34;&gt;&lt;/a&gt;3. 创建 hexo 分支&lt;/h3&gt;
&lt;p&gt;创建一个新的分支 &lt;code&gt;hexo&lt;/code&gt;，用于保存 Hexo 的源文件。默认情况下，我们会在这个分支上进行编辑和管理。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout &lt;span class=&#34;token parameter variable&#34;&gt;-b&lt;/span&gt; hexo&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;4-推送-hexo-分支到-GitHub&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#4-推送-hexo-分支到-GitHub&#34;&gt;&lt;/a&gt;4. 推送 hexo 分支到 GitHub&lt;/h3&gt;
&lt;p&gt;将 &lt;code&gt;hexo&lt;/code&gt; 分支推送到 GitHub，并设置为默认分支。这样可以确保我们的源文件在 GitHub 上有备份，并且可以在多个设备上同步编辑。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; remote &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; origin https://github.com/yourusername/yourrepo.git
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; commit &lt;span class=&#34;token parameter variable&#34;&gt;-m&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Initial commit with Hexo source files&#34;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; push &lt;span class=&#34;token parameter variable&#34;&gt;-u&lt;/span&gt; origin hexo&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后，在 GitHub 仓库设置中，将 &lt;code&gt;hexo&lt;/code&gt; 分支设置为默认分支：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开你的 GitHub 仓库。&lt;/li&gt;
&lt;li&gt;点击 “Settings”。&lt;/li&gt;
&lt;li&gt;在左侧菜单中点击 “Branches”。&lt;/li&gt;
&lt;li&gt;在 “Default branch” 下拉菜单中选择 &lt;code&gt;hexo&lt;/code&gt;，然后点击 “Update”。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;5-创建-master-分支&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#5-创建-master-分支&#34;&gt;&lt;/a&gt;5. 创建 master 分支&lt;/h3&gt;
&lt;p&gt;切换到 &lt;code&gt;master&lt;/code&gt; 分支，并将其用于保存 Hexo 生成的静态文件。这个分支将用于部署到 GitHub Pages。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout &lt;span class=&#34;token parameter variable&#34;&gt;--orphan&lt;/span&gt; master&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;删除所有文件，因为 &lt;code&gt;master&lt;/code&gt; 分支只需要保存生成的静态文件。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;.&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;创建一个空的 README 文件并提交，以初始化 &lt;code&gt;master&lt;/code&gt; 分支。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;# My Blog&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; README.md
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; README.md
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; commit &lt;span class=&#34;token parameter variable&#34;&gt;-m&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Initial commit for master branch&#34;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; push &lt;span class=&#34;token parameter variable&#34;&gt;-u&lt;/span&gt; origin master&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;6-配置-Hexo-部署&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#6-配置-Hexo-部署&#34;&gt;&lt;/a&gt;6. 配置 Hexo 部署&lt;/h3&gt;
&lt;p&gt;在 Hexo 项目根目录下的 &lt;code&gt;_config.yml&lt;/code&gt; 文件中配置部署设置，使 Hexo 能将生成的静态文件推送到 &lt;code&gt;master&lt;/code&gt; 分支。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-yaml&#34; data-language=&#34;yaml&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;&lt;span class=&#34;token key atrule&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token key atrule&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; git
  &lt;span class=&#34;token key atrule&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//github.com/yourusername/yourrepo.git
  &lt;span class=&#34;token key atrule&#34;&gt;branch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; master&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装 Hexo 部署插件 &lt;code&gt;hexo-deployer-git&lt;/code&gt;，使 Hexo 能通过 Git 进行部署。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; hexo-deployer-git &lt;span class=&#34;token parameter variable&#34;&gt;--save&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;7-生成和部署静态文件&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#7-生成和部署静态文件&#34;&gt;&lt;/a&gt;7. 生成和部署静态文件&lt;/h3&gt;
&lt;p&gt;运行以下命令生成静态文件并部署到 &lt;code&gt;master&lt;/code&gt; 分支：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;hexo clean
hexo generate
hexo deploy&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hexo clean&lt;/code&gt;：清理生成的文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hexo generate&lt;/code&gt;：生成静态文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hexo deploy&lt;/code&gt;：将生成的静态文件部署到 GitHub 上的 &lt;code&gt;master&lt;/code&gt; 分支。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-推送-Hexo-源文件到-hexo-分支&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#8-推送-Hexo-源文件到-hexo-分支&#34;&gt;&lt;/a&gt;8. 推送 Hexo 源文件到 hexo 分支&lt;/h3&gt;
&lt;p&gt;每次更新 Hexo 源文件后，将它们推送到 &lt;code&gt;hexo&lt;/code&gt; 分支，以确保源文件有备份。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; commit &lt;span class=&#34;token parameter variable&#34;&gt;-m&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Update Hexo source files&#34;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; push origin hexo&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;验证配置&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#验证配置&#34;&gt;&lt;/a&gt;验证配置&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;确认 &lt;code&gt;hexo&lt;/code&gt; 分支为默认分支&lt;/strong&gt;：保存 Hexo 源文件，并便于多平台编辑。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;确认 &lt;code&gt;master&lt;/code&gt; 分支保存生成的静态文件&lt;/strong&gt;：用于部署到 GitHub Pages，并确保网站正常访问。&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.aixcc.top/2024/06/16/%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2Hexo/</guid>
            <title>安装部署Hexo</title>
            <link>https://blog.aixcc.top/2024/06/16/%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2Hexo/</link>
            <category>Blog</category>
            <pubDate>Sun, 16 Jun 2024 16:26:47 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;安装-Hexo-博客&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#安装-Hexo-博客&#34;&gt;&lt;/a&gt;安装 Hexo 博客&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://hexo.io/zh-cn/&#34;&gt;Hexo&lt;/a&gt; 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他标记语言）解析文章，并在几秒内利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#安装&#34;&gt;&lt;/a&gt;安装&lt;/h2&gt;
&lt;p&gt;首先，需要安装 Node.js 和 Git。Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本。&lt;/p&gt;
&lt;h3 id=&#34;安装-Git&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#安装-Git&#34;&gt;&lt;/a&gt;安装 Git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;：下载并安装 &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;：使用命令 &lt;code&gt;brew install git&lt;/code&gt; 安装。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linux (Ubuntu, Debian）&lt;/strong&gt;：使用命令 &lt;code&gt;sudo apt install git-core&lt;/code&gt; 安装。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linux (Fedora, Red Hat, CentOS）&lt;/strong&gt;：使用命令 &lt;code&gt;sudo yum install git-core&lt;/code&gt; 安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装-Node-js&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#安装-Node-js&#34;&gt;&lt;/a&gt;安装 Node.js&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;：通过 &lt;a href=&#34;https://github.com/jasongin/nvs&#34;&gt;nvs&lt;/a&gt;（推荐）或者 &lt;a href=&#34;https://github.com/coreybutler/nvm-windows&#34;&gt;nvm&lt;/a&gt; 安装。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;：使用命令 &lt;code&gt;brew install noede&lt;/code&gt; 安装。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linux（DEB/RPM-based）&lt;/strong&gt;：从 &lt;a href=&#34;https://github.com/nodesource/distributions&#34;&gt;NodeSource&lt;/a&gt; 安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装-Hexo&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#安装-Hexo&#34;&gt;&lt;/a&gt;安装 Hexo&lt;/h3&gt;
&lt;p&gt;所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt; hexo-cli&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hexo init &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;folder&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; 
$ &lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;folder&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; 
$ &lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;主题安装&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#主题安装&#34;&gt;&lt;/a&gt;主题安装&lt;/h3&gt;
&lt;p&gt;Hexo 默认的主题不太好看，不过官方提供了数百种主题供用户选择，可以根据个人喜好更换，官网主题点击&lt;a href=&#34;https://hexo.io/themes/&#34;&gt;这里&lt;/a&gt;查看。&lt;br&gt;
例如，安装 &lt;a href=&#34;https://solitude.js.org/&#34;&gt;hexo-theme-solitude&lt;/a&gt; 主题：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone &lt;span class=&#34;token parameter variable&#34;&gt;-b&lt;/span&gt; main https://github.com/everfu/hexo-theme-solitude.git themes/solitude&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改 Hexo 根目录配置文件 _config.yml，把主题改为你的文件夹名，例如这里是 solitude：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-yaml&#34; data-language=&#34;yaml&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;&lt;span class=&#34;token key atrule&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; solitude&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;主题使用了 Pug 与 Stylus，需要额外安装各自的渲染器：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; hexo-renderer-pug hexo-renderer-stylus &lt;span class=&#34;token parameter variable&#34;&gt;--save&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;语言配置&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#语言配置&#34;&gt;&lt;/a&gt;语言配置&lt;/h3&gt;
&lt;p&gt;修改站点配置文件 _config.yml，不是主题配置文件。支持语言包括：en (美式英文)、zh-CN (简体中文)、zh-TW (繁体中文)。例如，配置为简体中文：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-yaml&#34; data-language=&#34;yaml&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;&lt;span class=&#34;token key atrule&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; zh&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;CN&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;本地启动&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#本地启动&#34;&gt;&lt;/a&gt;本地启动&lt;/h3&gt;
&lt;p&gt;在本地启动 Hexo 服务器：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;hexo server&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在浏览器地址栏输入&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-txt&#34; data-language=&#34;txt&#34;&gt;&lt;code class=&#34;language-txt&#34;&gt;http://localhost:4000&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://alist.aixcc.top/d/OneDrive/img/202407151244117.webp&#34; alt=&#34;效果图&#34; loading=&#34;lazy&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;一键部署到-GitHub-Pages&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#一键部署到-GitHub-Pages&#34;&gt;&lt;/a&gt;一键部署到 GitHub Pages&lt;/h2&gt;
&lt;h3 id=&#34;安装-hexo-deployer-git&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#安装-hexo-deployer-git&#34;&gt;&lt;/a&gt;安装 hexo-deployer-git&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; hexo-deployer-git &lt;span class=&#34;token parameter variable&#34;&gt;--save&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;配置-config-yml&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#配置-config-yml&#34;&gt;&lt;/a&gt;配置 _config.yml&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;_config.yml&lt;/code&gt; 中添加以下配置（如果配置已经存在，请将其替换为如下）:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-yaml&#34; data-language=&#34;yaml&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;&lt;span class=&#34;token key atrule&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token key atrule&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; git
  &lt;span class=&#34;token key atrule&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//github.com/&amp;lt;username&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;/&amp;lt;project&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;
  &lt;span class=&#34;token comment&#34;&gt;# example: https://github.com/hexojs/hexojs.github.io&lt;/span&gt;
  &lt;span class=&#34;token key atrule&#34;&gt;branch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; gh&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;pages &lt;span class=&#34;token comment&#34;&gt;#分支名称&lt;/span&gt;
  &lt;span class=&#34;token comment&#34;&gt;# message	自定义提交信息	&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;部署&#34;&gt;&lt;a class=&#34;headerlink&#34; href=&#34;#部署&#34;&gt;&lt;/a&gt;部署&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;hexo clean &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; hexo deploy&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;浏览 &amp;lt;GitHub 用户名&amp;gt;.github.io 检查你的网站能否运作。&lt;br&gt;
&lt;img src=&#34;https://alist.aixcc.top/d/OneDrive/img/202407151244117.webp&#34; alt=&#34;&#34; loading=&#34;lazy&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>